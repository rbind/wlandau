[
  {
    "path": "posts/2020-12-14-targetopia/",
    "title": "The targetopia",
    "description": "An R package ecosystem for reproducible computation at scale",
    "author": [],
    "date": "2020-12-14",
    "categories": [
      "rstats",
      "targetopia"
    ],
    "contents": "\n\n\n\nThe targets R package is a Make-like pipeline toolkit for reproducible data science. It tackles copious workflows and demanding runtimes to accelerate research papers, simulation studies, and other computationally intense projects in fields such as Bayesian statistics and machine learning. Relative to its predecessor, drake, targets is not only more effiient, but also more extensible. The modular interface and object-oriented design allow package developers to write reusable target factories.1 If you want to help other data scientists create a certain specialized kind of pipeline, you can write a function that creates a list of target objects.\n\n\n# yourExamplePackage/R/example_target_factory.R\nexample_target_factory <- function(data) {\n  list(\n    tar_target_raw(\"file\", data, format = \"file\"),\n    tar_target_raw(\"simple_model\", quote(run_simple(file))),\n    tar_target_raw(\"flexible_model\", quote(run_flexible(file))),\n    tar_target_raw(\"conclusions\", quote(summarize(simple_model, flexible_model)))\n  )\n}\n\n\n\nThen, when users of your package write _targets.R, the pipeline becomes much easier to write.\n\n\n# _targets.R\nlibrary(targets)\nlibrary(yourExamplePackage)\ntar_pipeline(target_factory(\"dataset.csv\"))\n\n\n\n\n\n\n\n\ntar_visnetwork(targets_only = TRUE)\n\n\npreservee25f57a75a3fd5c8\n\nWith target factories, a developer can pre-package a specialized pipeline to solve a targeted problem in any given field of study. Users do not need to write as much code, and they do not need to be familiar with the advanced features of targets.\n\n\n\nThe targetopia is the Pandora’s Box of low-hanging fruit growing from target factories, and it could finally democratize reproducible pipelines across the entire R community. It is a growing ecosystem of R packages that abstract away the most difficult parts in targets and make workflows simple and quick to write.\nstantargets, is a domain-specific workflow framework for Bayesian data analysis with Stan. With stantargets, writing a complex simulation study is as simple as a one call to tar_stan_mcmc_rep_summary(). It condenses this complicated pipeline down to the simple one below. Not only is the code shorter, but advanced concepts like file tracking, dynamic branching, and batching are completely abstracted away so the user does not need to understand them. Bayesian statisticians spend less time on software development and more time on model development.\n\n\n# _targets.R\nlibrary(targets)\nlibrary(stantargets)\nstan_targets <- tar_stan_mcmc_rep_summary(\n  model,\n  \"model.stan\",\n  generate_stan_data(), # custom function\n  batches = 40, # Batching reduces overhead.\n  reps = 25, # reps per batch\n  variables = c(\"beta\", \"true_beta_value\"),\n  summaries = list(\n    ~posterior::quantile2(.x, probs = c(0.025, 0.5, 0.975))\n  )\n)\ntar_pipeline(stan_targets)\n\n\n\ntarchetypes is a more general targetopia package that simplifies general-purpose tasks, including parameterized R Markdown. As described here, it is straightforward to reproducibly render a parameterized R Markdown report repeatedly across a large grid of parameters.\n\n\n# _targets.R\nlibrary(targets)\nlibrary(tarchetypes)\nlibrary(tibble)\ntar_pipeline(\n  tar_target(x, \"value_of_x\"),\n  tar_render_rep(\n    report,\n    \"report.Rmd\",\n    params = generate_large_param_grid(), # custom function\n    batches = 50 # Batching reduces overhead.\n  )\n)\n\n\n\nI intend to grow this new ecosystem to encompass more packages and more methodologies. If you would like to contribute, please feel free to reach out.\n@wlandau\n@wmlandau\n@wlandau\n\n\n\n\nIn early 2020, my colleague Richard Payne wrote a package to create specialized drake pipeline factories, an idea that I previously underestimated. His package helped users create pipelines of their own, but it struggled against the constraints of drake_plan(), I decided to design targets with target factories in mind.↩︎\n",
    "preview": "posts/2020-12-14-targetopia/targetopia.png",
    "last_modified": "2020-12-14T11:15:09-05:00",
    "input_file": "targetopia.utf8.md"
  },
  {
    "path": "posts/2020-12-13-distill/",
    "title": "RStudio distill",
    "description": "A fresh start using RStudio's latest web format",
    "author": [],
    "date": "2020-12-13",
    "categories": [
      "rstats",
      "rstudio"
    ],
    "contents": "\n\n\n\nRstudio just announced the CRAN release of distill, an R package for formatting scientific and technical websites.1 Like all RStudio tools, distill is super easy to use. It took only a few minutes to convert my old portfolio into a nicer-looking personal website.\nThe release of distill is timely. After a challenging 2020, it is nice to have a little nudge to refresh and regroup for 2021.\nFor me personally, this is the right time to rebuild my website. It has been four years since I started my career, and I now have a better understanding of how I fit into my professional community.\n\nHex logo from https://github.com/rstudio/distill. Copyright RStudio, PBC.↩︎\n",
    "preview": "posts/2020-12-13-distill/distill.png",
    "last_modified": "2020-12-14T11:15:52-05:00",
    "input_file": "distill.utf8.md"
  }
]
